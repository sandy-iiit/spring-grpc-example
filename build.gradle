plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.google.protobuf" version "0.9.4"
}

group = 'com.order-grpc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo1.maven.org/maven2/' }
	maven { url 'https://repo.spring.io/milestone/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'net.devh:grpc-spring-boot-starter:2.15.0.RELEASE'
	implementation 'com.google.protobuf:protobuf-java:3.21.7'
	compileOnly 'org.apache.tomcat:annotations-api:6.0.53'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.21.7"
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.51.0'

		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'use_apache_annotations=true'

			}
		}
	}
}

sourceSets {
	main {
		proto {
			// In addition to the default 'src/main/proto'
			srcDir 'src/main/java/com/order_grpc/order_service_grpc/protos'
		}
	}
	test {
		proto {
			// In addition to the default 'src/test/proto'
			srcDir 'src/test/protocolbuffers'
		}
	}
}
tasks.named('test') {
	useJUnitPlatform()
}
